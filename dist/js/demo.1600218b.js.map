{"version":3,"sources":["webpack:///./node_modules/sdp/sdp.js","webpack:///./src/views/Demo1.vue?2935","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/views/Demo1.vue?c393","webpack:///./node_modules/webrtc-adapter/src/js/utils.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/common_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_factory.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack:///src/views/Demo1.vue","webpack:///./src/views/Demo1.vue?ae2b","webpack:///./src/views/Demo1.vue","webpack:///./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js"],"names":["SDPUtils","generateIdentifier","Math","random","toString","substr","localCName","splitLines","blob","trim","split","map","line","splitSections","parts","part","index","getDescription","sections","getMediaSections","shift","matchPrefix","prefix","filter","indexOf","parseCandidate","substring","candidate","foundation","component","parseInt","protocol","toLowerCase","priority","ip","address","port","type","i","length","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","sdp","push","toUpperCase","join","parseIceOptions","parseRtpMap","parsed","payloadType","name","clockRate","channels","numChannels","writeRtpMap","codec","pt","undefined","preferredPayloadType","parseExtmap","id","direction","uri","writeExtmap","headerExtension","preferredId","parseFmtp","kv","j","writeFmtp","parameters","Object","keys","params","forEach","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","value","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","getIceParameters","concat","iceParameters","password","writeIceParameters","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","mline","rtpmapline","fmtps","writeRtpDescription","kind","caps","maxptime","extension","parseRtpEncodingParameters","secondarySsrc","encodingParameters","hasRed","hasUlpfec","primarySsrc","flows","apt","encParam","codecPayloadType","rtx","JSON","parse","stringify","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","obj","cname","rsize","reducedSize","compound","mux","parseMsid","spec","stream","track","planB","msidParts","generateSessionId","writeSessionBoilerplate","sessId","sessVer","sessUser","sessionId","version","user","writeMediaSection","transceiver","iceGatherer","getLocalParameters","dtlsTransport","rtpSender","rtpReceiver","msid","sendEncodingParameters","getDirection","getKind","isRejected","parseMLine","fmt","slice","parseOLine","username","sessionVersion","netType","addressType","isValidSDP","charAt","module","exports","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Demo1_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Demo1_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default","n","dP","f","FProto","Function","prototype","nameRE","NAME","configurable","get","this","match","e","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","playsinline","autoplay","on","click","getPhoto","_v","staticRenderFns","logDisabled_","deprecationWarnings_","extractVersion","uastring","expr","pos","wrapPeerConnectionEvent","window","eventNameToWrap","wrapper","RTCPeerConnection","proto","nativeAddEventListener","addEventListener","nativeEventName","cb","apply","arguments","wrappedCallback","modifiedEvent","_eventMap","nativeRemoveEventListener","removeEventListener","unwrappedCb","defineProperty","[object Object]","enumerable","disableLog","bool","Error","disableWarnings","log","console","deprecated","oldMethod","newMethod","warn","detectBrowser","navigator","result","browser","mozGetUserMedia","userAgent","webkitGetUserMedia","isSecureContext","webkitRTCPeerConnection","RTCIceGatherer","mediaDevices","compactObject","data","reduce","accumulator","key","isObject","isEmptyObject","assign","walkStats","stats","base","resultSet","has","set","endsWith","filterStats","outbound","streamStatsType","filteredResult","Map","trackStats","trackIdentifier","trackStat","trackId","getusermedia_logging","shimGetUserMedia","browserDetails","constraintsToChrome_","c","mandatory","optional","cc","r","ideal","exact","min","max","oldname_","oc","mix","advanced","shimConstraints_","constraints","func","audio","remap","a","b","video","face","facingMode","getSupportedFacingModeLies","getSupportedConstraints","matches","enumerateDevices","then","devices","d","dev","find","some","label","includes","deviceId","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","getUserMedia_","onSuccess","onError","getUserMedia","bind","origGetUserMedia","cs","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","Promise","reject","shimGetDisplayMedia","getSourceId","getDisplayMedia","sourceId","widthSpecified","width","heightSpecified","height","frameRateSpecified","frameRate","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","error","shimMediaStream","MediaStream","webkitMediaStream","shimOnTrack","receiver","_ontrack","origSetRemoteDescription","setRemoteDescription","_ontrackpoly","te","getReceivers","event","Event","streams","dispatchEvent","shimGetSendersWithDtmf","shimSenderWithDtmf","pc","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","origAddTrack","addTrack","sender","origRemoveTrack","removeTrack","idx","splice","origAddStream","addStream","origRemoveStream","removeStream","s","RTCRtpSender","origGetSenders","senders","shimGetStats","origGetStats","getStats","selector","successCallback","errorCallback","args","fixChromeStats_","response","standardReport","reports","report","standardStats","timestamp","localcandidate","remotecandidate","names","stat","makeMapStats","successCallbackWrapper_","resolve","shimSenderReceiverGetStats","RTCRtpReceiver","origGetReceivers","receivers","srcElement","MediaStreamTrack","err","shimAddTrackRemoveTrackWithNative","getLocalStreams","_shimmedLocalStreams","streamId","alreadyExists","existingSenders","newSenders","newSender","shimAddTrackRemoveTrack","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","replaceInternalStreamId","internalId","externalStream","internalStream","replace","RegExp","RTCSessionDescription","replaceExternalStreamId","signalingState","call","t","oldStream","method","nativeMethod","isLegacyCall","desc","origSetLocalDescription","setLocalDescription","origLocalDescription","getOwnPropertyDescriptor","isLocal","streamid","hasTrack","shimPeerConnection","RTCIceCandidate","nativeAddIceCandidate","addIceCandidate","fixNegotiationNeeded","target","filterIceServers","iceServers","edgeVersion","hasTurn","server","urls","url","isString","validTurn","startsWith","getusermedia_shimGetUserMedia","catch","getdisplaymedia_shimGetDisplayMedia","edge_shim_shimPeerConnection","origMSTEnabled","ev","enabled","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","rtcpeerconnection_default","config","shimReplaceTrack","replaceTrack","setTrack","firefox_getusermedia_shimGetUserMedia","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","firefox_getdisplaymedia_shimGetDisplayMedia","preferredMediaSource","code","mediaSource","firefox_shim_shimOnTrack","RTCTrackEvent","firefox_shim_shimPeerConnection","mozRTCPeerConnection","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","nativeGetStats","onSucc","onErr","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimLocalStreamsAPI","_localStreams","_addTrack","tracks","shimRemoteStreamsAPI","getRemoteStreams","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","createOffer","createAnswer","failureCallback","options","promise","withCallback","safari_shim_shimGetUserMedia","_getUserMedia","shimConstraints","errcb","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","pcConstraints","newIceServers","hasOwnProperty","generateCertificate","shimTrackEventTransceiver","RTCTransceiver","shimCreateOfferLegacy","origCreateOffer","offerOptions","offerToReceiveAudio","audioTransceiver","getTransceivers","setDirection","addTransceiver","offerToReceiveVideo","videoTransceiver","shimRTCIceCandidate","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","sdp_default","augmentedCandidate","toJSON","sdpMid","sdpMLineIndex","writable","shimMaxMessageSize","RTCSctpTransport","_sctp","sctpInDescription","mLine","getRemoteFirefoxVersion","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","getMaxMessageSize","maxMessageSize","isFirefox","canSendMMS","remoteMMS","Number","POSITIVE_INFINITY","sctp","shimSendThrowTypeError","wrapDcSend","dc","origDataChannelSend","send","size","byteLength","readyState","TypeError","origCreateDataChannel","createDataChannel","dataChannel","channel","shimConnectionState","completed","checking","iceConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","connectionState","newEvent","removeAllowExtmapMixed","nativeSRD","adapterFactory","shimChrome","shimFirefox","shimEdge","shimSafari","logging","adapter","commonShim","common_shim_namespaceObject","chrome_shim_namespaceObject","browserShim","firefox_shim_namespaceObject","edge_shim_namespaceObject","safari_shim_namespaceObject","Demo1vue_type_script_lang_js_","videoDom","canvasDom","methods","init","document","querySelector","canvas","documentElement","clientWidth","handleSuccess","handleError","videoWidth","videoHeight","getContext","drawImage","srcObject","mounted","_this","$nextTick","views_Demo1vue_type_script_lang_js_","componentNormalizer","__webpack_exports__","fixStatsType","dtlsRole","_initialTrackId","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","findCodecByPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","rCodec","lHeaderExtension","rHeaderExtension","isActionAllowedInSignalingState","action","offer","answer","maybeAddCandidate","iceTransport","alreadyAdded","getRemoteCandidates","remoteCandidate","addRemoteCandidate","makeError","NotSupportedError","InvalidAccessError","OperationError","addTrackToStreamAndFireEvent","MediaStreamTrackEvent","removeTrackFromStreamAndFireEvent","fireAddTrack","trackEvent","setTimeout","_dispatchEvent","_eventTarget","createDocumentFragment","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","_iceGatherers","iceCandidatePoolSize","gatherPolicy","_config","transceivers","_sdpSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","_emitGatheringStateChange","getConfiguration","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","_maybeFireNegotiationNeeded","clonedStream","clone","clonedTrack","_createIceGatherer","bufferedCandidateEvents","bufferCandidates","end","state","_gather","onlocalcandidate","evt","cand","serializedCandidate","complete","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","recv","encodings","p","receive","isIceLite","rejected","remoteIceParameters","remoteDtlsParameters","start","_updateSignalingState","receiverList","iceOptions","remoteMsid","isComplete","cands","setTransport","setRemoteCandidates","hasRtx","default","getCapabilities","isNewTrack","nativeTrack","sid","item","close","newState","states","new","closed","connected","disconnected","failed","connecting","numAudioTracks","numVideoTracks","remoteCodec","hdrExt","remoteExtensions","rHdrExt","getLocalCandidates","mediaSectionsInOffer","localTrack","candidateString","senderOrReceiver","promises","all","allStats","results","ortcObjects","ortcObjectName","nativeGetstats","nativeStats","mapStats"],"mappings":"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","file":"js/demo.1600218b.js","sourcesContent":[" /* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n          ? '/' + headerExtension.direction\n          : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n      'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function(line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function(line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n          mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n  .map(function(line) {\n    var parts = line.substr(17).split(' ');\n    return parts.map(function(part) {\n      return parseInt(part, 10);\n    });\n  });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n      .map(function(line) {\n        return SDPUtils.parseSsrcMedia(line);\n      })\n      .filter(function(obj) {\n        return obj.attribute === 'cname';\n      })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(msidParts) {\n    return msidParts.attribute === 'msid';\n  });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Demo1.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Demo1.vue?vue&type=style&index=0&lang=less&\"","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"demo\"},[_c('video',{attrs:{\"playsinline\":\"\",\"autoplay\":\"\"}}),_c('button',{staticClass:\"btn\",on:{\"click\":_vm.getPhoto}},[_vm._v(\"Take snapshot\")]),_c('canvas')])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  const {navigator} = window;\n\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection &&\n       !window.RTCIceGatherer)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (typeof data !== 'object') {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObject = typeof data[key] === 'object';\n    const value = isObject ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObject && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const browserDetails = utils.detectBrowser(window);\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n    return getSourceId(constraints)\n      .then(sourceId => {\n        const widthSpecified = constraints.video && constraints.video.width;\n        const heightSpecified = constraints.video && constraints.video.height;\n        const frameRateSpecified = constraints.video &&\n          constraints.video.frameRate;\n        constraints.video = {\n          mandatory: {\n            chromeMediaSource: 'desktop',\n            chromeMediaSourceId: sourceId,\n            maxFrameRate: frameRateSpecified || 3\n          }\n        };\n        if (widthSpecified) {\n          constraints.video.mandatory.maxWidth = widthSpecified;\n        }\n        if (heightSpecified) {\n          constraints.video.mandatory.maxHeight = heightSpecified;\n        }\n        return window.navigator.mediaDevices.getUserMedia(constraints);\n      });\n  };\n}\n","\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n      if (!this._ontrackpoly) {\n        this._ontrackpoly = (e) => {\n          // onaddstream does not fire when a track is added to an existing\n          // stream. But stream.onaddtrack is implemented so we use that.\n          e.stream.addEventListener('addtrack', te => {\n            let receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = this.getReceivers()\n                .find(r => r.track && r.track.id === te.track.id);\n            } else {\n              receiver = {track: te.track};\n            }\n\n            const event = new Event('track');\n            event.track = te.track;\n            event.receiver = receiver;\n            event.transceiver = {receiver};\n            event.streams = [e.stream];\n            this.dispatchEvent(event);\n          });\n          e.stream.getTracks().forEach(track => {\n            let receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = this.getReceivers()\n                .find(r => r.track && r.track.id === track.id);\n            } else {\n              receiver = {track};\n            }\n            const event = new Event('track');\n            event.track = track;\n            event.receiver = receiver;\n            event.transceiver = {receiver};\n            event.streams = [e.stream];\n            this.dispatchEvent(event);\n          });\n        };\n        this.addEventListener('addstream', this._ontrackpoly);\n      }\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n        let sender = origAddTrack.apply(this, arguments);\n        if (!sender) {\n          sender = shimSenderWithDtmf(this, track);\n          this._senders.push(sender);\n        }\n        return sender;\n      };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n        origRemoveTrack.apply(this, arguments);\n        const idx = this._senders.indexOf(sender);\n        if (idx !== -1) {\n          this._senders.splice(idx, 1);\n        }\n      };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      this._senders = this._senders || [];\n      origRemoveStream.apply(this, [stream]);\n\n      stream.getTracks().forEach(track => {\n        const sender = this._senders.find(s => s.track === track);\n        if (sender) { // remove sender\n          this._senders.splice(this._senders.indexOf(sender), 1);\n        }\n      });\n    };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function(selector,\n      successCallback, errorCallback) {\n    const args = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof arguments[0] !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        args[1](makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        arguments[0]]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(successCallback, errorCallback);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function() {\n        const receivers = origGetReceivers.apply(this, []);\n        receivers.forEach(receiver => receiver._pc = this);\n        return receivers;\n      };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams = function() {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    return Object.keys(this._shimmedLocalStreams)\n      .map(streamId => this._shimmedLocalStreams[streamId][0]);\n  };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (!stream) {\n      return origAddTrack.apply(this, arguments);\n    }\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    const sender = origAddTrack.apply(this, arguments);\n    if (!this._shimmedLocalStreams[stream.id]) {\n      this._shimmedLocalStreams[stream.id] = [stream, sender];\n    } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n      this._shimmedLocalStreams[stream.id].push(sender);\n    }\n    return sender;\n  };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    delete this._shimmedLocalStreams[stream.id];\n    return origRemoveStream.apply(this, arguments);\n  };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    if (sender) {\n      Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n        const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n        if (idx !== -1) {\n          this._shimmedLocalStreams[streamId].splice(idx, 1);\n        }\n        if (this._shimmedLocalStreams[streamId].length === 1) {\n          delete this._shimmedLocalStreams[streamId];\n        }\n      });\n    }\n    return origRemoveTrack.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrack(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams = function() {\n    const nativeStreams = origGetLocalStreams.apply(this);\n    this._reverseStreams = this._reverseStreams || {};\n    return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n  };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n    delete this._reverseStreams[(this._streams[stream.id] ?\n        this._streams[stream.id].id : stream.id)];\n    delete this._streams[stream.id];\n  };\n\n  window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this.signalingState === 'closed') {\n      throw new DOMException(\n        'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n        'InvalidStateError');\n    }\n    const streams = [].slice.call(arguments, 1);\n    if (streams.length !== 1 ||\n        !streams[0].getTracks().find(t => t === track)) {\n      // this is not fully correct but all we can manage without\n      // [[associated MediaStreams]] internal slot.\n      throw new DOMException(\n        'The adapter.js addTrack polyfill only supports a single ' +\n        ' stream which is associated with the specified track.',\n        'NotSupportedError');\n    }\n\n    const alreadyExists = this.getSenders().find(s => s.track === track);\n    if (alreadyExists) {\n      throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n    }\n\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    const oldStream = this._streams[stream.id];\n    if (oldStream) {\n      // this is using odd Chrome behaviour, use with caution:\n      // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n      // Note: we rely on the high-level addTrack/dtmf shim to\n      // create the sender with a dtmf sender.\n      oldStream.addTrack(track);\n\n      // Trigger ONN async.\n      Promise.resolve().then(() => {\n        this.dispatchEvent(new Event('negotiationneeded'));\n      });\n    } else {\n      const newStream = new window.MediaStream([track]);\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      this.addStream(newStream);\n    }\n    return this.getSenders().find(s => s.track === track);\n  };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    window.RTCPeerConnection.prototype[method] = function() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    };\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription = function() {\n    if (!arguments.length || !arguments[0].type) {\n      return origSetLocalDescription.apply(this, arguments);\n    }\n    arguments[0] = replaceExternalStreamId(this, arguments[0]);\n    return origSetLocalDescription.apply(this, arguments);\n  };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this.signalingState === 'closed') {\n      throw new DOMException(\n        'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n        'InvalidStateError');\n    }\n    // We can not yet check for sender instanceof RTCRtpSender\n    // since we shim RTPSender. So we check if sender._pc is set.\n    if (!sender._pc) {\n      throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.', 'TypeError');\n    }\n    const isLocal = sender._pc === this;\n    if (!isLocal) {\n      throw new DOMException('Sender was not created by this connection.',\n          'InvalidAccessError');\n    }\n\n    // Search for the native stream the senders track belongs to.\n    this._streams = this._streams || {};\n    let stream;\n    Object.keys(this._streams).forEach(streamid => {\n      const hasTrack = this._streams[streamid].getTracks()\n        .find(track => sender.track === track);\n      if (hasTrack) {\n        stream = this._streams[streamid];\n      }\n    });\n\n    if (stream) {\n      if (stream.getTracks().length === 1) {\n        // if this is the last track of the stream, remove the stream. This\n        // takes care of any shimmed _senders.\n        this.removeStream(this._reverseStreams[stream.id]);\n      } else {\n        // relying on the same odd chrome behaviour as above.\n        stream.removeTrack(sender.track);\n      }\n      this.dispatchEvent(new Event('negotiationneeded'));\n    }\n  };\n}\n\nexport function shimPeerConnection(window) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n              window.RTCIceCandidate :\n              window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n\n  // support for addIceCandidate(null or undefined)\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  window.RTCPeerConnection.prototype.addIceCandidate = function() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n}\n\nexport function fixNegotiationNeeded(window) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (pc.signalingState !== 'stable') {\n      return;\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator);\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window) {\n  const browserDetails = utils.detectBrowser(window);\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n    if (!(constraints && constraints.video)) {\n      const err = new DOMException('getDisplayMedia without video ' +\n          'constraints is undefined');\n      err.name = 'NotFoundError';\n      // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n      err.code = 8;\n      return Promise.reject(err);\n    }\n    if (constraints.video === true) {\n      constraints.video = {mediaSource: preferredMediaSource};\n    } else {\n      constraints.video.mediaSource = preferredMediaSource;\n    }\n    return window.navigator.mediaDevices.getUserMedia(constraints);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n  ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n              window.RTCIceCandidate :\n              window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n\n  // support for addIceCandidate(null or undefined)\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  window.RTCPeerConnection.prototype.addIceCandidate = function() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function(\n    selector,\n    onSucc,\n    onErr\n  ) {\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream = function(stream) {\n    utils.deprecated('removeStream', 'removeTrack');\n    this.getSenders().forEach(sender => {\n      if (sender.track && stream.getTracks().includes(sender.track)) {\n        this.removeTrack(sender);\n      }\n    });\n  };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      return this._localStreams;\n    };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      stream.getTracks().forEach(track => _addTrack.call(this, track, stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      if (stream) {\n        if (!this._localStreams) {\n          this._localStreams = [stream];\n        } else if (!this._localStreams.includes(stream)) {\n          this._localStreams.push(stream);\n        }\n      }\n      return _addTrack.call(this, track, stream);\n    };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      const index = this._localStreams.indexOf(stream);\n      if (index === -1) {\n        return;\n      }\n      this._localStreams.splice(index, 1);\n      const tracks = stream.getTracks();\n      this.getSenders().forEach(sender => {\n        if (tracks.includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams = function() {\n      return this._remoteStreams ? this._remoteStreams : [];\n    };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n      const pc = this;\n      if (!this._onaddstreampoly) {\n        this.addEventListener('track', this._onaddstreampoly = function(e) {\n          e.streams.forEach(stream => {\n            if (!pc._remoteStreams) {\n              pc._remoteStreams = [];\n            }\n            if (pc._remoteStreams.indexOf(stream) >= 0) {\n              return;\n            }\n            pc._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            pc.dispatchEvent(event);\n          });\n        });\n      }\n      return origSetRemoteDescription.apply(pc, arguments);\n    };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const createOffer = prototype.createOffer;\n  const createAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer = function(successCallback, failureCallback) {\n    const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n    const promise = createOffer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  prototype.createAnswer = function(successCallback, failureCallback) {\n    const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n    const promise = createAnswer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n    if (pcConfig && pcConfig.iceServers) {\n      const newIceServers = [];\n      for (let i = 0; i < pcConfig.iceServers.length; i++) {\n        let server = pcConfig.iceServers[i];\n        if (!server.hasOwnProperty('urls') &&\n            server.hasOwnProperty('url')) {\n          utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n          server = JSON.parse(JSON.stringify(server));\n          server.urls = server.url;\n          delete server.url;\n          newIceServers.push(server);\n        } else {\n          newIceServers.push(pcConfig.iceServers[i]);\n        }\n      }\n      pcConfig.iceServers = newIceServers;\n    }\n    return new OrigPeerConnection(pcConfig, pcConstraints);\n  };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in window.RTCPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\n      // defined for some reason even when window.RTCTransceiver is not.\n      !window.RTCTransceiver) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {\n    if (offerOptions) {\n      if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n      }\n      const audioTransceiver = this.getTransceivers().find(transceiver =>\n        transceiver.receiver.track.kind === 'audio');\n      if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n        if (audioTransceiver.direction === 'sendrecv') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('sendonly');\n          } else {\n            audioTransceiver.direction = 'sendonly';\n          }\n        } else if (audioTransceiver.direction === 'recvonly') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('inactive');\n          } else {\n            audioTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveAudio === true &&\n          !audioTransceiver) {\n        this.addTransceiver('audio');\n      }\n\n      if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n      }\n      const videoTransceiver = this.getTransceivers().find(transceiver =>\n        transceiver.receiver.track.kind === 'video');\n      if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n        if (videoTransceiver.direction === 'sendrecv') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('sendonly');\n          } else {\n            videoTransceiver.direction = 'sendonly';\n          }\n        } else if (videoTransceiver.direction === 'recvonly') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('inactive');\n          } else {\n            videoTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveVideo === true &&\n          !videoTransceiver) {\n        this.addTransceiver('video');\n      }\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window) {\n  if (window.RTCSctpTransport || !window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n    this._sctp = null;\n\n    if (sctpInDescription(arguments[0])) {\n      // Check if the remote is FF.\n      const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n      // Get the maximum message size the local peer is capable of sending\n      const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n      // Get the maximum message size of the remote peer.\n      const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n      // Determine final maximum message size\n      let maxMessageSize;\n      if (canSendMMS === 0 && remoteMMS === 0) {\n        maxMessageSize = Number.POSITIVE_INFINITY;\n      } else if (canSendMMS === 0 || remoteMMS === 0) {\n        maxMessageSize = Math.max(canSendMMS, remoteMMS);\n      } else {\n        maxMessageSize = Math.min(canSendMMS, remoteMMS);\n      }\n\n      // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n      // attribute.\n      const sctp = {};\n      Object.defineProperty(sctp, 'maxMessageSize', {\n        get() {\n          return maxMessageSize;\n        }\n      });\n      this._sctp = sctp;\n    }\n\n    return origSetRemoteDescription.apply(this, arguments);\n  };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel = function() {\n    const dataChannel = origCreateDataChannel.apply(this, arguments);\n    wrapDcSend(dataChannel, this);\n    return dataChannel;\n  };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeAllowExtmapMixed(window) {\n  /* remove a=extmap-allow-mixed for Chrome < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      desc.sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimGetStats(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimGetDisplayMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter = adapterFactory({window});\nexport default adapter;\n","<template>\r\n  <div class=\"demo\">\r\n    <video playsinline autoplay></video>\r\n    <button class=\"btn\" @click=\"getPhoto\">Take snapshot</button>\r\n    <canvas></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport addapter from 'webrtc-adapter';\r\n  export default {\r\n    name: 'demo1',\r\n    data() {\r\n      return {\r\n        videoDom: null,\r\n        canvasDom: null,\r\n      }\r\n    },\r\n    methods: {\r\n      init() {\r\n        this.videoDom = document.querySelector('video');\r\n        this.canvasDom = window.canvas = document.querySelector('canvas');\r\n        this.canvasDom.width = document.documentElement.clientWidth;\r\n        this.canvasDom.height = this.canvasDom.width * 0.75;\r\n\r\n        const constraints = {\r\n          audio: false,\r\n          video: true,\r\n        };\r\n\r\n        navigator.mediaDevices.getUserMedia(constraints).then(this.handleSuccess).catch(this.handleError);\r\n      },\r\n      getPhoto() {\r\n        this.canvasDom.width = this.videoDom.videoWidth;\r\n        this.canvasDom.height = this.videoDom.videoHeight;\r\n        if (this.canvasDom && this.videoDom) {\r\n          this.canvasDom.getContext('2d').drawImage(this.videoDom, 0, 0, this.canvasDom.width, this.canvasDom.height);\r\n        }\r\n      },\r\n      handleSuccess(stream) {\r\n        window.stream = stream;\r\n        if (this.videoDom) {\r\n          this.videoDom.srcObject = stream;\r\n        }\r\n      },\r\n      handleError(error) {\r\n        console.log('navigator.MediaDevices.getUserMedia error: ', error.message, error.name);\r\n      }\r\n    },\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.init();\r\n      })\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n  @import url(\"../assets/styles/button.less\");\r\n  .btn {\r\n    .radiusButton;\r\n    margin-bottom: 20px;\r\n  }\r\n</style>\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Demo1.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Demo1.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Demo1.vue?vue&type=template&id=47b2bc22&\"\nimport script from \"./Demo1.vue?vue&type=script&lang=js&\"\nexport * from \"./Demo1.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Demo1.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n"],"sourceRoot":""}