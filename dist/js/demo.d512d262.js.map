{"version":3,"sources":["webpack:///./node_modules/sdp/sdp.js","webpack:///./src/views/Demo1.vue?2935","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/views/Demo1.vue?3a08","webpack:///./node_modules/webrtc-adapter/src/js/utils.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/common_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_factory.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack:///src/views/Demo1.vue","webpack:///./src/views/Demo1.vue?ae2b","webpack:///./src/views/Demo1.vue","webpack:///./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","webpack:///./node_modules/process/browser.js"],"names":["SDPUtils","generateIdentifier","Math","random","toString","substr","localCName","splitLines","blob","trim","split","map","line","splitSections","parts","part","index","getDescription","sections","getMediaSections","shift","matchPrefix","prefix","filter","indexOf","parseCandidate","substring","candidate","foundation","component","parseInt","protocol","toLowerCase","priority","ip","address","port","type","i","length","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","sdp","push","toUpperCase","join","parseIceOptions","parseRtpMap","parsed","payloadType","name","clockRate","channels","numChannels","writeRtpMap","codec","pt","undefined","preferredPayloadType","parseExtmap","id","direction","uri","writeExtmap","headerExtension","preferredId","parseFmtp","kv","j","writeFmtp","parameters","Object","keys","params","forEach","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","value","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","getIceParameters","concat","iceParameters","password","writeIceParameters","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","mline","rtpmapline","fmtps","writeRtpDescription","kind","caps","maxptime","extension","parseRtpEncodingParameters","secondarySsrc","encodingParameters","hasRed","hasUlpfec","primarySsrc","flows","apt","encParam","codecPayloadType","rtx","JSON","parse","stringify","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","obj","cname","rsize","reducedSize","compound","mux","parseMsid","spec","stream","track","planB","msidParts","generateSessionId","writeSessionBoilerplate","sessId","sessVer","sessUser","sessionId","version","user","writeMediaSection","transceiver","iceGatherer","getLocalParameters","dtlsTransport","rtpSender","rtpReceiver","msid","sendEncodingParameters","getDirection","getKind","isRejected","parseMLine","fmt","slice","parseOLine","username","sessionVersion","netType","addressType","isValidSDP","charAt","module","exports","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Demo1_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_10_oneOf_1_0_node_modules_css_loader_index_js_ref_10_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_10_oneOf_1_2_node_modules_less_loader_dist_cjs_js_ref_10_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Demo1_vue_vue_type_style_index_0_lang_less___WEBPACK_IMPORTED_MODULE_0___default","n","global","scope","self","window","apply","Function","prototype","Timeout","clearFn","this","_id","_clearFn","setTimeout","call","arguments","clearTimeout","setInterval","clearInterval","timeout","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","setImmediate","clearImmediate","process","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","getPrototypeOf","installNextTickImplementation","canUsePostMessage","installPostMessageImplementation","MessageChannel","installMessageChannelImplementation","createElement","installReadyStateChangeImplementation","installSetTimeoutImplementation","callback","args","Array","task","handle","run","runIfPresent","nextTick","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","messagePrefix","onGlobalMessage","event","source","data","addEventListener","attachEvent","channel","port1","port2","html","documentElement","script","onreadystatechange","removeChild","appendChild","dP","f","FProto","nameRE","NAME","configurable","get","match","e","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","playsinline","autoplay","on","click","getPhoto","_v","staticRenderFns","logDisabled_","deprecationWarnings_","extractVersion","uastring","expr","pos","wrapPeerConnectionEvent","eventNameToWrap","wrapper","RTCPeerConnection","proto","nativeAddEventListener","nativeEventName","cb","wrappedCallback","modifiedEvent","_eventMap","nativeRemoveEventListener","removeEventListener","unwrappedCb","defineProperty","[object Object]","enumerable","disableLog","bool","Error","disableWarnings","log","console","deprecated","oldMethod","newMethod","warn","detectBrowser","navigator","result","browser","mozGetUserMedia","userAgent","webkitGetUserMedia","isSecureContext","webkitRTCPeerConnection","RTCIceGatherer","mediaDevices","compactObject","reduce","accumulator","key","isObject","isEmptyObject","assign","walkStats","stats","base","resultSet","has","set","endsWith","filterStats","outbound","streamStatsType","filteredResult","Map","trackStats","trackIdentifier","trackStat","trackId","getusermedia_logging","shimGetUserMedia","browserDetails","constraintsToChrome_","c","mandatory","optional","cc","r","ideal","exact","min","max","oldname_","oc","mix","advanced","shimConstraints_","constraints","func","audio","remap","a","b","video","face","facingMode","getSupportedFacingModeLies","getSupportedConstraints","matches","enumerateDevices","then","devices","d","dev","find","some","label","includes","deviceId","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","message","constraint","constraintName","getUserMedia_","onSuccess","onError","getUserMedia","bind","origGetUserMedia","cs","getAudioTracks","getVideoTracks","getTracks","stop","DOMException","Promise","reject","shimGetDisplayMedia","getSourceId","getDisplayMedia","sourceId","widthSpecified","width","heightSpecified","height","frameRateSpecified","frameRate","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","error","shimMediaStream","MediaStream","webkitMediaStream","shimOnTrack","receiver","_ontrack","origSetRemoteDescription","setRemoteDescription","_ontrackpoly","te","getReceivers","Event","streams","dispatchEvent","shimGetSendersWithDtmf","shimSenderWithDtmf","pc","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","origAddTrack","addTrack","sender","origRemoveTrack","removeTrack","idx","splice","origAddStream","addStream","origRemoveStream","removeStream","s","RTCRtpSender","origGetSenders","senders","shimGetStats","origGetStats","getStats","selector","successCallback","errorCallback","fixChromeStats_","response","standardReport","reports","report","standardStats","timestamp","localcandidate","remotecandidate","names","stat","makeMapStats","successCallbackWrapper_","resolve","shimSenderReceiverGetStats","RTCRtpReceiver","origGetReceivers","receivers","srcElement","MediaStreamTrack","err","shimAddTrackRemoveTrackWithNative","getLocalStreams","_shimmedLocalStreams","streamId","alreadyExists","existingSenders","newSenders","newSender","shimAddTrackRemoveTrack","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","newStream","replaceInternalStreamId","internalId","externalStream","internalStream","replace","RegExp","RTCSessionDescription","replaceExternalStreamId","signalingState","t","oldStream","method","nativeMethod","isLegacyCall","desc","origSetLocalDescription","setLocalDescription","origLocalDescription","getOwnPropertyDescriptor","isLocal","streamid","hasTrack","shimPeerConnection","RTCIceCandidate","nativeAddIceCandidate","addIceCandidate","fixNegotiationNeeded","target","filterIceServers","iceServers","edgeVersion","hasTurn","server","urls","url","isString","validTurn","startsWith","getusermedia_shimGetUserMedia","catch","getdisplaymedia_shimGetDisplayMedia","edge_shim_shimPeerConnection","origMSTEnabled","ev","enabled","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","rtcpeerconnection_default","config","shimReplaceTrack","replaceTrack","setTrack","firefox_getusermedia_shimGetUserMedia","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","firefox_getdisplaymedia_shimGetDisplayMedia","preferredMediaSource","code","mediaSource","firefox_shim_shimOnTrack","RTCTrackEvent","firefox_shim_shimPeerConnection","mozRTCPeerConnection","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","nativeGetStats","onSucc","onErr","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimLocalStreamsAPI","_localStreams","_addTrack","tracks","shimRemoteStreamsAPI","getRemoteStreams","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","createOffer","createAnswer","failureCallback","options","promise","withCallback","safari_shim_shimGetUserMedia","_getUserMedia","shimConstraints","errcb","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","pcConstraints","newIceServers","hasOwnProperty","generateCertificate","shimTrackEventTransceiver","RTCTransceiver","shimCreateOfferLegacy","origCreateOffer","offerOptions","offerToReceiveAudio","audioTransceiver","getTransceivers","setDirection","addTransceiver","offerToReceiveVideo","videoTransceiver","shimRTCIceCandidate","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","sdp_default","augmentedCandidate","toJSON","sdpMid","sdpMLineIndex","writable","shimMaxMessageSize","RTCSctpTransport","_sctp","sctpInDescription","mLine","getRemoteFirefoxVersion","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","getMaxMessageSize","maxMessageSize","isFirefox","canSendMMS","remoteMMS","Number","POSITIVE_INFINITY","sctp","shimSendThrowTypeError","wrapDcSend","dc","origDataChannelSend","send","size","byteLength","readyState","TypeError","origCreateDataChannel","createDataChannel","dataChannel","shimConnectionState","completed","checking","iceConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","connectionState","newEvent","removeAllowExtmapMixed","nativeSRD","adapterFactory","shimChrome","shimFirefox","shimEdge","shimSafari","logging","adapter","commonShim","common_shim_namespaceObject","chrome_shim_namespaceObject","browserShim","firefox_shim_namespaceObject","edge_shim_namespaceObject","safari_shim_namespaceObject","Demo1vue_type_script_lang_js_","videoDom","canvasDom","methods","init","querySelector","canvas","clientWidth","handleSuccess","handleError","videoWidth","videoHeight","getContext","drawImage","srcObject","mounted","_this","$nextTick","views_Demo1vue_type_script_lang_js_","componentNormalizer","__webpack_exports__","fixStatsType","dtlsRole","_initialTrackId","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","findCodecByPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","rCodec","lHeaderExtension","rHeaderExtension","isActionAllowedInSignalingState","action","offer","answer","maybeAddCandidate","iceTransport","alreadyAdded","getRemoteCandidates","remoteCandidate","addRemoteCandidate","makeError","NotSupportedError","InvalidAccessError","OperationError","addTrackToStreamAndFireEvent","MediaStreamTrackEvent","removeTrackFromStreamAndFireEvent","fireAddTrack","trackEvent","_dispatchEvent","_eventTarget","createDocumentFragment","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","_iceGatherers","iceCandidatePoolSize","gatherPolicy","_config","transceivers","_sdpSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","_emitGatheringStateChange","getConfiguration","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","_maybeFireNegotiationNeeded","clonedStream","clone","clonedTrack","_createIceGatherer","bufferedCandidateEvents","bufferCandidates","end","state","_gather","onlocalcandidate","evt","cand","serializedCandidate","complete","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","onerror","_disposeIceAndDtlsTransports","_transceive","recv","encodings","p","receive","isIceLite","rejected","remoteIceParameters","remoteDtlsParameters","start","_updateSignalingState","receiverList","iceOptions","remoteMsid","isComplete","cands","setTransport","setRemoteCandidates","hasRtx","default","getCapabilities","isNewTrack","nativeTrack","sid","newState","states","new","closed","connected","disconnected","failed","connecting","numAudioTracks","numVideoTracks","remoteCodec","hdrExt","remoteExtensions","rHdrExt","getLocalCandidates","mediaSectionsInOffer","localTrack","candidateString","senderOrReceiver","promises","all","allStats","results","ortcObjects","ortcObjectName","nativeGetstats","nativeStats","mapStats","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","len","Item","array","noop","title","env","argv","versions","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask"],"mappings":"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","file":"js/demo.d512d262.js","sourcesContent":[" /* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n          ? '/' + headerExtension.direction\n          : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n      'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function(line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function(line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n          mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n  .map(function(line) {\n    var parts = line.substr(17).split(' ');\n    return parts.map(function(part) {\n      return parseInt(part, 10);\n    });\n  });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n      .map(function(line) {\n        return SDPUtils.parseSsrcMedia(line);\n      })\n      .filter(function(obj) {\n        return obj.attribute === 'cname';\n      })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(msidParts) {\n    return msidParts.attribute === 'msid';\n  });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Demo1.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Demo1.vue?vue&type=style&index=0&lang=less&\"","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"demo\"},[_c('video',{attrs:{\"playsinline\":\"\",\"autoplay\":\"\"}}),_c('button',{staticClass:\"btn\",on:{\"click\":_vm.getPhoto}},[_vm._v(\"Take snapshot\")]),_c('canvas')])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  const {navigator} = window;\n\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection &&\n       !window.RTCIceGatherer)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (typeof data !== 'object') {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObject = typeof data[key] === 'object';\n    const value = isObject ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObject && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const browserDetails = utils.detectBrowser(window);\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n    return getSourceId(constraints)\n      .then(sourceId => {\n        const widthSpecified = constraints.video && constraints.video.width;\n        const heightSpecified = constraints.video && constraints.video.height;\n        const frameRateSpecified = constraints.video &&\n          constraints.video.frameRate;\n        constraints.video = {\n          mandatory: {\n            chromeMediaSource: 'desktop',\n            chromeMediaSourceId: sourceId,\n            maxFrameRate: frameRateSpecified || 3\n          }\n        };\n        if (widthSpecified) {\n          constraints.video.mandatory.maxWidth = widthSpecified;\n        }\n        if (heightSpecified) {\n          constraints.video.mandatory.maxHeight = heightSpecified;\n        }\n        return window.navigator.mediaDevices.getUserMedia(constraints);\n      });\n  };\n}\n","\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n      if (!this._ontrackpoly) {\n        this._ontrackpoly = (e) => {\n          // onaddstream does not fire when a track is added to an existing\n          // stream. But stream.onaddtrack is implemented so we use that.\n          e.stream.addEventListener('addtrack', te => {\n            let receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = this.getReceivers()\n                .find(r => r.track && r.track.id === te.track.id);\n            } else {\n              receiver = {track: te.track};\n            }\n\n            const event = new Event('track');\n            event.track = te.track;\n            event.receiver = receiver;\n            event.transceiver = {receiver};\n            event.streams = [e.stream];\n            this.dispatchEvent(event);\n          });\n          e.stream.getTracks().forEach(track => {\n            let receiver;\n            if (window.RTCPeerConnection.prototype.getReceivers) {\n              receiver = this.getReceivers()\n                .find(r => r.track && r.track.id === track.id);\n            } else {\n              receiver = {track};\n            }\n            const event = new Event('track');\n            event.track = track;\n            event.receiver = receiver;\n            event.transceiver = {receiver};\n            event.streams = [e.stream];\n            this.dispatchEvent(event);\n          });\n        };\n        this.addEventListener('addstream', this._ontrackpoly);\n      }\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n        let sender = origAddTrack.apply(this, arguments);\n        if (!sender) {\n          sender = shimSenderWithDtmf(this, track);\n          this._senders.push(sender);\n        }\n        return sender;\n      };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n        origRemoveTrack.apply(this, arguments);\n        const idx = this._senders.indexOf(sender);\n        if (idx !== -1) {\n          this._senders.splice(idx, 1);\n        }\n      };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      this._senders = this._senders || [];\n      origRemoveStream.apply(this, [stream]);\n\n      stream.getTracks().forEach(track => {\n        const sender = this._senders.find(s => s.track === track);\n        if (sender) { // remove sender\n          this._senders.splice(this._senders.indexOf(sender), 1);\n        }\n      });\n    };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function(selector,\n      successCallback, errorCallback) {\n    const args = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof arguments[0] !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        args[1](makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        arguments[0]]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(successCallback, errorCallback);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers = function() {\n        const receivers = origGetReceivers.apply(this, []);\n        receivers.forEach(receiver => receiver._pc = this);\n        return receivers;\n      };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams = function() {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    return Object.keys(this._shimmedLocalStreams)\n      .map(streamId => this._shimmedLocalStreams[streamId][0]);\n  };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (!stream) {\n      return origAddTrack.apply(this, arguments);\n    }\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    const sender = origAddTrack.apply(this, arguments);\n    if (!this._shimmedLocalStreams[stream.id]) {\n      this._shimmedLocalStreams[stream.id] = [stream, sender];\n    } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n      this._shimmedLocalStreams[stream.id].push(sender);\n    }\n    return sender;\n  };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    delete this._shimmedLocalStreams[stream.id];\n    return origRemoveStream.apply(this, arguments);\n  };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n    if (sender) {\n      Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n        const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n        if (idx !== -1) {\n          this._shimmedLocalStreams[streamId].splice(idx, 1);\n        }\n        if (this._shimmedLocalStreams[streamId].length === 1) {\n          delete this._shimmedLocalStreams[streamId];\n        }\n      });\n    }\n    return origRemoveTrack.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrack(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams = function() {\n    const nativeStreams = origGetLocalStreams.apply(this);\n    this._reverseStreams = this._reverseStreams || {};\n    return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n  };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream = function(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n    delete this._reverseStreams[(this._streams[stream.id] ?\n        this._streams[stream.id].id : stream.id)];\n    delete this._streams[stream.id];\n  };\n\n  window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this.signalingState === 'closed') {\n      throw new DOMException(\n        'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n        'InvalidStateError');\n    }\n    const streams = [].slice.call(arguments, 1);\n    if (streams.length !== 1 ||\n        !streams[0].getTracks().find(t => t === track)) {\n      // this is not fully correct but all we can manage without\n      // [[associated MediaStreams]] internal slot.\n      throw new DOMException(\n        'The adapter.js addTrack polyfill only supports a single ' +\n        ' stream which is associated with the specified track.',\n        'NotSupportedError');\n    }\n\n    const alreadyExists = this.getSenders().find(s => s.track === track);\n    if (alreadyExists) {\n      throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n    }\n\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n    const oldStream = this._streams[stream.id];\n    if (oldStream) {\n      // this is using odd Chrome behaviour, use with caution:\n      // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n      // Note: we rely on the high-level addTrack/dtmf shim to\n      // create the sender with a dtmf sender.\n      oldStream.addTrack(track);\n\n      // Trigger ONN async.\n      Promise.resolve().then(() => {\n        this.dispatchEvent(new Event('negotiationneeded'));\n      });\n    } else {\n      const newStream = new window.MediaStream([track]);\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      this.addStream(newStream);\n    }\n    return this.getSenders().find(s => s.track === track);\n  };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    window.RTCPeerConnection.prototype[method] = function() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    };\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription = function() {\n    if (!arguments.length || !arguments[0].type) {\n      return origSetLocalDescription.apply(this, arguments);\n    }\n    arguments[0] = replaceExternalStreamId(this, arguments[0]);\n    return origSetLocalDescription.apply(this, arguments);\n  };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this.signalingState === 'closed') {\n      throw new DOMException(\n        'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n        'InvalidStateError');\n    }\n    // We can not yet check for sender instanceof RTCRtpSender\n    // since we shim RTPSender. So we check if sender._pc is set.\n    if (!sender._pc) {\n      throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.', 'TypeError');\n    }\n    const isLocal = sender._pc === this;\n    if (!isLocal) {\n      throw new DOMException('Sender was not created by this connection.',\n          'InvalidAccessError');\n    }\n\n    // Search for the native stream the senders track belongs to.\n    this._streams = this._streams || {};\n    let stream;\n    Object.keys(this._streams).forEach(streamid => {\n      const hasTrack = this._streams[streamid].getTracks()\n        .find(track => sender.track === track);\n      if (hasTrack) {\n        stream = this._streams[streamid];\n      }\n    });\n\n    if (stream) {\n      if (stream.getTracks().length === 1) {\n        // if this is the last track of the stream, remove the stream. This\n        // takes care of any shimmed _senders.\n        this.removeStream(this._reverseStreams[stream.id]);\n      } else {\n        // relying on the same odd chrome behaviour as above.\n        stream.removeTrack(sender.track);\n      }\n      this.dispatchEvent(new Event('negotiationneeded'));\n    }\n  };\n}\n\nexport function shimPeerConnection(window) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n              window.RTCIceCandidate :\n              window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n\n  // support for addIceCandidate(null or undefined)\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  window.RTCPeerConnection.prototype.addIceCandidate = function() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n}\n\nexport function fixNegotiationNeeded(window) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (pc.signalingState !== 'stable') {\n      return;\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator);\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window) {\n  const browserDetails = utils.detectBrowser(window);\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia = function(constraints) {\n    if (!(constraints && constraints.video)) {\n      const err = new DOMException('getDisplayMedia without video ' +\n          'constraints is undefined');\n      err.name = 'NotFoundError';\n      // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n      err.code = 8;\n      return Promise.reject(err);\n    }\n    if (constraints.video === true) {\n      constraints.video = {mediaSource: preferredMediaSource};\n    } else {\n      constraints.video.mediaSource = preferredMediaSource;\n    }\n    return window.navigator.mediaDevices.getUserMedia(constraints);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n  ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n              window.RTCIceCandidate :\n              window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n\n  // support for addIceCandidate(null or undefined)\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  window.RTCPeerConnection.prototype.addIceCandidate = function() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function(\n    selector,\n    onSucc,\n    onErr\n  ) {\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream = function(stream) {\n    utils.deprecated('removeStream', 'removeTrack');\n    this.getSenders().forEach(sender => {\n      if (sender.track && stream.getTracks().includes(sender.track)) {\n        this.removeTrack(sender);\n      }\n    });\n  };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      return this._localStreams;\n    };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      stream.getTracks().forEach(track => _addTrack.call(this, track, stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      if (stream) {\n        if (!this._localStreams) {\n          this._localStreams = [stream];\n        } else if (!this._localStreams.includes(stream)) {\n          this._localStreams.push(stream);\n        }\n      }\n      return _addTrack.call(this, track, stream);\n    };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      const index = this._localStreams.indexOf(stream);\n      if (index === -1) {\n        return;\n      }\n      this._localStreams.splice(index, 1);\n      const tracks = stream.getTracks();\n      this.getSenders().forEach(sender => {\n        if (tracks.includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams = function() {\n      return this._remoteStreams ? this._remoteStreams : [];\n    };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n      const pc = this;\n      if (!this._onaddstreampoly) {\n        this.addEventListener('track', this._onaddstreampoly = function(e) {\n          e.streams.forEach(stream => {\n            if (!pc._remoteStreams) {\n              pc._remoteStreams = [];\n            }\n            if (pc._remoteStreams.indexOf(stream) >= 0) {\n              return;\n            }\n            pc._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            pc.dispatchEvent(event);\n          });\n        });\n      }\n      return origSetRemoteDescription.apply(pc, arguments);\n    };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const createOffer = prototype.createOffer;\n  const createAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer = function(successCallback, failureCallback) {\n    const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n    const promise = createOffer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  prototype.createAnswer = function(successCallback, failureCallback) {\n    const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n    const promise = createAnswer.apply(this, [options]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n    if (pcConfig && pcConfig.iceServers) {\n      const newIceServers = [];\n      for (let i = 0; i < pcConfig.iceServers.length; i++) {\n        let server = pcConfig.iceServers[i];\n        if (!server.hasOwnProperty('urls') &&\n            server.hasOwnProperty('url')) {\n          utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n          server = JSON.parse(JSON.stringify(server));\n          server.urls = server.url;\n          delete server.url;\n          newIceServers.push(server);\n        } else {\n          newIceServers.push(pcConfig.iceServers[i]);\n        }\n      }\n      pcConfig.iceServers = newIceServers;\n    }\n    return new OrigPeerConnection(pcConfig, pcConstraints);\n  };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in window.RTCPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\n      // defined for some reason even when window.RTCTransceiver is not.\n      !window.RTCTransceiver) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {\n    if (offerOptions) {\n      if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveAudio = !!offerOptions.offerToReceiveAudio;\n      }\n      const audioTransceiver = this.getTransceivers().find(transceiver =>\n        transceiver.receiver.track.kind === 'audio');\n      if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n        if (audioTransceiver.direction === 'sendrecv') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('sendonly');\n          } else {\n            audioTransceiver.direction = 'sendonly';\n          }\n        } else if (audioTransceiver.direction === 'recvonly') {\n          if (audioTransceiver.setDirection) {\n            audioTransceiver.setDirection('inactive');\n          } else {\n            audioTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveAudio === true &&\n          !audioTransceiver) {\n        this.addTransceiver('audio');\n      }\n\n      if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n        // support bit values\n        offerOptions.offerToReceiveVideo = !!offerOptions.offerToReceiveVideo;\n      }\n      const videoTransceiver = this.getTransceivers().find(transceiver =>\n        transceiver.receiver.track.kind === 'video');\n      if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n        if (videoTransceiver.direction === 'sendrecv') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('sendonly');\n          } else {\n            videoTransceiver.direction = 'sendonly';\n          }\n        } else if (videoTransceiver.direction === 'recvonly') {\n          if (videoTransceiver.setDirection) {\n            videoTransceiver.setDirection('inactive');\n          } else {\n            videoTransceiver.direction = 'inactive';\n          }\n        }\n      } else if (offerOptions.offerToReceiveVideo === true &&\n          !videoTransceiver) {\n        this.addTransceiver('video');\n      }\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window) {\n  if (window.RTCSctpTransport || !window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n    this._sctp = null;\n\n    if (sctpInDescription(arguments[0])) {\n      // Check if the remote is FF.\n      const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n      // Get the maximum message size the local peer is capable of sending\n      const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n      // Get the maximum message size of the remote peer.\n      const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n      // Determine final maximum message size\n      let maxMessageSize;\n      if (canSendMMS === 0 && remoteMMS === 0) {\n        maxMessageSize = Number.POSITIVE_INFINITY;\n      } else if (canSendMMS === 0 || remoteMMS === 0) {\n        maxMessageSize = Math.max(canSendMMS, remoteMMS);\n      } else {\n        maxMessageSize = Math.min(canSendMMS, remoteMMS);\n      }\n\n      // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n      // attribute.\n      const sctp = {};\n      Object.defineProperty(sctp, 'maxMessageSize', {\n        get() {\n          return maxMessageSize;\n        }\n      });\n      this._sctp = sctp;\n    }\n\n    return origSetRemoteDescription.apply(this, arguments);\n  };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel = function() {\n    const dataChannel = origCreateDataChannel.apply(this, arguments);\n    wrapDcSend(dataChannel, this);\n    return dataChannel;\n  };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeAllowExtmapMixed(window) {\n  /* remove a=extmap-allow-mixed for Chrome < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      desc.sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimGetStats(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimGetDisplayMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter = adapterFactory({window});\nexport default adapter;\n","<template>\r\n  <div class=\"demo\">\r\n    <video playsinline autoplay></video>\r\n    <button class=\"btn\" @click=\"getPhoto\">Take snapshot</button>\r\n    <canvas></canvas>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import addapter from 'webrtc-adapter';\r\nimport { setTimeout } from 'timers';\r\n  export default {\r\n    name: 'demo1',\r\n    data() {\r\n      return {\r\n        videoDom: 'a',\r\n        canvasDom: 'b',\r\n      }\r\n    },\r\n    methods: {\r\n      init() {\r\n        this.videoDom = document.querySelector('video');\r\n        this.canvasDom = window.canvas = document.querySelector('canvas');\r\n        this.canvasDom.width = document.documentElement.clientWidth;\r\n        this.canvasDom.height = this.canvasDom.width * 0.75;\r\n\r\n        const constraints = {\r\n          audio: false,\r\n          video: true,\r\n        };\r\n\r\n        navigator.mediaDevices.getUserMedia(constraints).then(this.handleSuccess).catch(this.handleError);\r\n      },\r\n      getPhoto() {\r\n        this.canvasDom.width = this.videoDom.videoWidth;\r\n        this.canvasDom.height = this.videoDom.videoHeight;\r\n        this.canvasDom.getContext('2d').drawImage(this.videoDom, 0, 0, this.canvasDom.width, this.canvasDom.height);\r\n      },\r\n      handleSuccess(stream) {\r\n        window.stream = stream;\r\n        video.srcObject = stream;\r\n      },\r\n      handleError(error) {\r\n        console.log('navigator.MediaDevices.getUserMedia error: ', error.message, error.name);\r\n      }\r\n    },\r\n    mounted() {\r\n      this.$nextTick(() => {\r\n        this.init();\r\n      })\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"less\">\r\n  @import url(\"../assets/styles/button.less\");\r\n  .btn {\r\n    .radiusButton;\r\n    margin-bottom: 20px;\r\n  }\r\n</style>\r\n\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Demo1.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Demo1.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Demo1.vue?vue&type=template&id=46603390&\"\nimport script from \"./Demo1.vue?vue&type=script&lang=js&\"\nexport * from \"./Demo1.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Demo1.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"sourceRoot":""}